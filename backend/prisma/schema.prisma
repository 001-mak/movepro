generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model tbl_company {
  id                                        Int                    @id @default(autoincrement())
  company_name                              String                 @db.VarChar(250)
  company_email                             String                 @db.VarChar(250)
  street                                    String                 @db.MediumText
  city                                      String                 @db.VarChar(50)
  state                                     String                 @db.VarChar(50)
  zip                                       String                 @db.VarChar(10)
  country                                   String                 @db.VarChar(50)
  company_logo                              String                 @db.VarChar(250)
  website                                   String                 @db.VarChar(250)
  social_fb                                 String                 @db.MediumText
  social_tw                                 String                 @db.MediumText
  social_in                                 String                 @db.MediumText
  social_insta                              String                 @db.MediumText
  social_tube                               String                 @db.MediumText
  user_id                                   Int
  subscription_plan_id                      Int?                   @default(1)
  tbl_subscription_plan                     tbl_subscription_plan? @relation(fields: [subscription_plan_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_subscription_plan")
  tbl_user_tbl_company_user_idTotbl_user    tbl_user               @relation("tbl_company_user_idTotbl_user", fields: [user_id], references: [id], onUpdate: NoAction, map: "fk_user_company")
  tbl_inventory_groups                      tbl_inventory_groups[]
  tbl_leads                                 tbl_leads[]
  tbl_user_tbl_user_company_idTotbl_company tbl_user[]             @relation("tbl_user_company_idTotbl_company")

  @@index([subscription_plan_id], map: "fk_subscription_plan")
  @@index([user_id], map: "fk_user_company")
}

model tbl_leads {
  id                         Int          @id @default(autoincrement())
  first_name                 String       @db.VarChar(100)
  last_name                  String       @db.VarChar(100)
  phone                      String       @db.VarChar(15)
  email                      String       @db.VarChar(150)
  comments                   String?      @db.MediumText
  JobType                    String       @db.VarChar(50)
  ServiceType                String?      @db.VarChar(50)
  MoveDate                   String       @db.VarChar(20)
  MoveTime                   String       @db.VarChar(20)
  EstimatedDate              String?      @db.VarChar(20)
  EstimatedTime              String?      @db.VarChar(20)
  LoadingDwellingSize        String?      @db.VarChar(20)
  LoadingPlaceName           String?      @db.VarChar(20)
  LeadLoadingApartment       String?      @db.VarChar(200)
  LeadLoadingNotes           String?      @db.MediumText
  LoadingAddress             String?      @db.VarChar(50)
  LoadingZip                 String?      @db.VarChar(10)
  LoadingLat                 String?      @db.VarChar(10)
  LoadingLong                String?      @db.VarChar(10)
  LoadingCity                String       @db.VarChar(20)
  LoadingState               String?      @db.VarChar(20)
  LoadingStairs              String?      @db.VarChar(5)
  LoadingNeedHelpPacking     String?      @db.VarChar(1)
  LoadingPackingDate         String?      @db.VarChar(20)
  LoadingPackingTime         String?      @db.VarChar(20)
  LoadingElevator            String?      @db.VarChar(1)
  LoadingGarage              String?      @db.VarChar(1)
  UnloadingDwellingSize      String?      @db.VarChar(20)
  UnloadingPlaceName         String?      @db.VarChar(20)
  UnloadingAddress           String?      @db.VarChar(50)
  LeadUnloadingApartment     String?      @db.VarChar(200)
  LeadUnloadingNotes         String?      @db.MediumText
  UnloadingZip               String?      @db.VarChar(10)
  UnloadingLat               String?      @db.VarChar(10)
  UnloadingLong              String?      @db.VarChar(10)
  UnloadingCity              String?      @db.VarChar(20)
  UnloadingState             String?      @db.VarChar(20)
  UnloadingStairs            String?      @db.VarChar(20)
  UnloadingNeedHelpPacking   String?      @db.VarChar(1)
  UnloadingElevator          String?      @db.VarChar(1)
  ndLoadingDwellingSize      String?      @map("2ndLoadingDwellingSize") @db.VarChar(20)
  ndLoadingPlaceName         String?      @map("2ndLoadingPlaceName") @db.VarChar(100)
  ndLoadingApartment         String?      @map("2ndLoadingApartment") @db.VarChar(200)
  ndLoadingAddress           String?      @map("2ndLoadingAddress") @db.VarChar(50)
  ndLoadingZip               String?      @map("2ndLoadingZip") @db.VarChar(10)
  ndLoadingLat               String?      @map("2ndLoadingLat") @db.VarChar(10)
  ndLoadingLong              String?      @map("2ndLoadingLong") @db.VarChar(10)
  ndLoadingCity              String?      @map("2ndLoadingCity") @db.VarChar(10)
  ndLoadingState             String?      @map("2ndLoadingState") @db.VarChar(20)
  ndLoadingStairs            String?      @map("2ndLoadingStairs") @db.VarChar(5)
  ndLoadingNeedHelpPacking   String?      @map("2ndLoadingNeedHelpPacking") @db.VarChar(1)
  ndLoadingPackingDate       String?      @map("2ndLoadingPackingDate") @db.VarChar(20)
  ndLoadingPackingTime       String?      @map("2ndLoadingPackingTime") @db.VarChar(20)
  ndLoadingElevator          String?      @map("2ndLoadingElevator") @db.VarChar(1)
  ndLoadingGarage            String?      @map("2ndLoadingGarage") @db.VarChar(1)
  ndLoadingNotes             String?      @map("2ndLoadingNotes") @db.MediumText
  ndUnloadingDwellingSize    String?      @map("2ndUnloadingDwellingSize") @db.VarChar(20)
  ndUnloadingPlaceName       String?      @map("2ndUnloadingPlaceName") @db.VarChar(20)
  ndUnloadingApartment       String?      @map("2ndUnloadingApartment") @db.VarChar(100)
  ndUnloadingAddress         String?      @map("2ndUnloadingAddress") @db.VarChar(50)
  ndUnloadingZip             String?      @map("2ndUnloadingZip") @db.VarChar(10)
  ndUnloadingLat             String?      @map("2ndUnloadingLat") @db.VarChar(10)
  ndUnloadingLong            String?      @map("2ndUnloadingLong") @db.VarChar(10)
  ndUnloadingCity            String?      @map("2ndUnloadingCity") @db.VarChar(10)
  ndUnloadingState           String?      @map("2ndUnloadingState") @db.VarChar(20)
  ndUnloadingStairs          String?      @map("2ndUnloadingStairs") @db.VarChar(5)
  ndUnloadingNeedHelpPacking String?      @map("2ndUnloadingNeedHelpPacking") @db.VarChar(1)
  ndUnloadingElevator        String?      @map("2ndUnloadingElevator") @db.VarChar(1)
  ndLeadUnloadingNotes       String?      @map("2ndLeadUnloadingNotes") @db.MediumText
  insert_time                DateTime     @default(now()) @db.Timestamp(0)
  distance                   String?      @db.VarChar(250)
  lead_status                String       @default("1") @db.VarChar(1)
  book_date                  String?      @db.VarChar(20)
  complete_date              String?      @db.VarChar(20)
  accept_status              Int?         @default(0)
  reject_reason              String?      @db.VarChar(50)
  company_id                 Int?
  tbl_company                tbl_company? @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_company_id")

  @@index([company_id], map: "fk_company_id")
}

model tbl_role {
  id       Int        @id @default(autoincrement())
  role     String     @db.VarChar(50)
  tbl_user tbl_user[]
}

model tbl_subscription_plan {
  id                      Int           @id @default(autoincrement())
  subscription_plan_name  String        @db.VarChar(100)
  subscription_plan_price String        @db.VarChar(50)
  tbl_company             tbl_company[]
}

model tbl_user {
  id                                           Int           @id @default(autoincrement())
  email_id                                     String        @unique(map: "email_id") @db.VarChar(255)
  first_name                                   String        @db.VarChar(255)
  last_name                                    String        @db.VarChar(255)
  password                                     String        @db.VarChar(255)
  salt                                         String        @db.VarChar(255)
  phone_no                                     String        @db.VarChar(20)
  picture                                      String?       @db.VarChar(500)
  bio                                          String?       @db.MediumText
  cover_photo                                  String?       @db.VarChar(500)
  street                                       String?       @db.VarChar(255)
  city                                         String?       @db.VarChar(255)
  state                                        String?       @db.VarChar(255)
  zip                                          String?       @db.VarChar(255)
  country                                      String?       @db.VarChar(255)
  ssn                                          String        @db.VarChar(20)
  hire_date                                    String?       @db.VarChar(20)
  current_pay                                  String?       @db.VarChar(10)
  company_id                                   Int?
  role_id                                      Int           @default(2)
  reset_key                                    String?       @db.VarChar(255)
  reset_key_expiry                             DateTime?     @db.DateTime(0)
  user_role                                    String?       @db.VarChar(50)
  tbl_company_tbl_company_user_idTotbl_user    tbl_company[] @relation("tbl_company_user_idTotbl_user")
  tbl_company_tbl_user_company_idTotbl_company tbl_company?  @relation("tbl_user_company_idTotbl_company", fields: [company_id], references: [id], onUpdate: NoAction, map: "fk_company_user")
  tbl_role                                     tbl_role      @relation(fields: [role_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user_role")

  @@index([company_id], map: "fk_company_user")
  @@index([role_id], map: "fk_user_role")
}

model tbl_inventory_groups {
  id          Int         @id @default(autoincrement())
  group_name  String      @db.VarChar(100)
  company_id  Int
  tbl_company tbl_company @relation(fields: [company_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_tbl_inventory_group_company")

  @@index([company_id], map: "fk_tbl_inventory_group_company")
}
